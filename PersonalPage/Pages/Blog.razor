@page "/blog"

@using PersonalPage.Services.Blog
@using PersonalPage.Models

@inject IStorageService _storageAPI

<div class="container mt-5">

    <div class="row">
        <div class="col">
            <h5>Blazor Series</h5>
            <ul>
                <li><a href="/Blog/BlazorSeries">Intro to WebAssembly, SignalR, Rendering, Hosting models and different types of Blazor project types in .NET 8</a>  </li>
                <li><a href="/Blog/BlazorSeries2">Lifecycle methods and component parameters</a>  </li>
            </ul>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col">
            <h5>Front-end</h5>
            <ul>
                <li><a href="/blog/bootstrap">Difference between col | col-sm | col-md | col-lg in Bootstrap 5</a>  </li>
            </ul>
        </div>
    </div>



    <div class="mt-4">
        <h5>My recent .NET bookmarks..</h5>
        <ul>
            <li><a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-expressions#capture-of-outer-variables-and-variable-scope-in-lambda-expressions" target="_blank">C# - Captured variables in lambda expressions</a> </li>
            <li><a href="https://stackoverflow.com/questions/38083735/when-to-use-include-in-ef-not-needed-in-projection" target="_blank">EF - When to use .Include nad when NOT (lazy loading vs EF context)</a> </li>
        </ul>
    </div>

    @if(posts != null)
    {
        <div class="row mt-4">
            <div class="col">
                <ul>
                    @foreach (var item in posts)
                    {
                        <li>@item.Title</li>
                    }
                </ul>
            </div>
        </div>    
    }

</div>



@code { 

    List<BlogPost>? posts = null;

    protected override async Task OnInitializedAsync()
    {
        posts = await _storageAPI.LoadBlogPostsFromGitHubStorage();
    }

}
